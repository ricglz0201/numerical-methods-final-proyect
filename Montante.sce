global iMatSize
iMatSize = [2, 2]

// This GUI file is generated by guibuilder version 4.2.1
//////////
f=figure('figure_position',[400,50],'figure_size',[640,480],'auto_resize','on','background',[33],'figure_name','Graphic window number %d','dockable','off','infobar_visible','off','toolbar_visible','off','menubar_visible','off','default_axes','on','visible','off');
//////////
handles.dummy = 0;
handles.Montante=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.4296875,0.8056769,0.140625,0.0436681],'Relief','default','SliderStep',[0.01,0.1],'String','Montante','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Montante','Callback','')
handles.Text_Matrix=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.3015625,0.7008734,0.0953125,0.0305677],'Relief','default','SliderStep',[0.01,0.1],'String','Matriz','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Text_Matrix','Callback','')
handles.Matriz=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.425625,0.6977729,0.1859375,0.0405677],'Relief','default','SliderStep',[0.01,0.1],'String','Input','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Matriz','Callback','')
handles.Calcula=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.4346875,0.5043668,0.1359375,0.0393013],'Relief','default','SliderStep',[0.01,0.1],'String','Calcula','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Calcula','Callback','Calcula_callback(handles)')
handles.Respuesta=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.4203125,0.3034934,0.1640625,0.0982533],'Relief','default','SliderStep',[0.01,0.1],'String','Respuesta','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Respuesta','Callback','')


f.visible = "on";

////////////////////////////////////////////////////
// Montante
// Realiza montante sobre una matriz
// Par√°metros:
// dMat la matriz a la cual se le va a aplicar montante
// Retorno:
// dX el vector X tras haber realizado Montante
////////////////////////////////////////////////////
function [dX] = Montante(dMat)
  iPrevPiv = 1
  for iRow = 1 : size(dMat, 1)
    for iK = 1 : size(dMat, 1)
      if iRow <> iK
        for iCol = iRow + 1 : size(dMat, 2)
          dMat(iK, iCol) = (dMat(iRow, iRow) * dMat(iK, iCol) - dMat(iK, iRow) * dMat(iRow, iCol)) / iPrevPiv
        end
      end
    end
    iPrevPiv = dMat(iRow, iRow)
    disp(dMat)
  end
  for iRow = 1 : size(dMat, 1) - 1
    dMat(iRow, iRow) = iPrevPiv
  end
  for iRow = 1 : size(dMat, 1)
    dX(iRow) = dMat(iRow, size(dMat, 2)) / iPrevPiv
  end
endfunction

//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////

function Calcula_callback(handles)
  dMat = matrix(handles.Matriz.String)
  handles.Respuesta.String = [header; string(dMat)]
endfunction


function Incrementa_Renglon(handles)
  sMatriz = matrix(handles.Matriz.String, iMatSize)
  sMatrizCeros = string(zeros(1, iMatSize(2)))
  sMatriz = [sMatriz; sMatrizCeros]
  handles.Matriz.String = sMatriz
  iMatSize(1) = iMatSize(1) + 1
endfunction

function Incrementa_Renglon(handles)
  sMatriz = matrix(handles.Matriz.String, iMatSize)
  sMatrizCeros = string(zeros(iMatSize(1), 1))
  sMatriz = cat(2, sMatriz, sMatrizCeros)
  handles.Matriz.String = sMatriz
  iMatSize(2) = iMatSize(2) - 1
endfunction

function Borra_Renglon(handles)
  sMatriz = matrix(handles.Matriz.String, iMatSize)
  sMatriz(iMatSize(1), :) = []
  handles.Matriz.String = sMatriz
  iMatSize(1) = iMatSize(1) - 1
endfunction

function Borra_Columna(handles)
  sMatriz = matrix(handles.Matriz.String, iMatSize)
  sMatriz(:, iMatSize(2)) = []
  handles.Matriz.String = sMatriz
  iMatSize(2) = iMatSize(2) - 1
endfunction
