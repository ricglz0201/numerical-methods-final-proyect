clear
clearglobal

// This GUI file is generated by guibuilder version 4.2.1
//////////
f=figure('figure_position',[400,50],'figure_size',[640,480],'auto_resize','on','background',[33],'figure_name','Graphic window number %d','dockable','off','infobar_visible','off','toolbar_visible','off','menubar_visible','off','default_axes','on','visible','off');
//////////
handles.dummy = 0;
handles.Funcion=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.165625,0.5014847,0.08,0.04],'Relief','default','SliderStep',[0.01,0.1],'String','Funcion','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Funcion','Callback','')
handles.Input_Funcion=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.271875,0.4993013,0.06,0.04],'Relief','default','SliderStep',[0.01,0.1],'String','x+1','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Input_Funcion','Callback','')
handles.Text_Limite_Inferior=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.171875,0.7074236,0.1303125,0.0327511],'Relief','default','SliderStep',[0.01,0.1],'String','Limite inferior','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Text_Limite_Inferior','Callback','')
handles.Limite_Inferior=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.31875,0.7052402,0.0896875,0.0349345],'Relief','default','SliderStep',[0.01,0.1],'String','0','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Limite_Inferior','Callback','')
handles.Text_Limite_Superior=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.6046875,0.7052402,0.1421875,0.0393013],'Relief','default','SliderStep',[0.01,0.1],'String','Limite superior','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Text_Limite_Superior','Callback','')
handles.Limite_Superior=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7640625,0.7074236,0.078125,0.0327511],'Relief','default','SliderStep',[0.01,0.1],'String','1','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Limite_Superior','Callback','')
handles.Text_Error_Minimo=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.178125,0.6048035,0.1296875,0.0327511],'Relief','default','SliderStep',[0.01,0.1],'String','Error Minimo','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Text_Error_Minimo','Callback','')
handles.Error_Minimo=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.325,0.6091703,0.071875,0.0283843],'Relief','default','SliderStep',[0.01,0.1],'String','0.5','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Error_Minimo','Callback','')
handles.Text_Numero_de_Iteraciones=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.603125,0.6004367,0.1753125,0.0414847],'Relief','default','SliderStep',[0.01,0.1],'String','Numero de iteraciones','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Text_Numero_de_Iteraciones','Callback','')
handles.Numero_de_iteraciones=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.79375,0.6048035,0.0765625,0.0349345],'Relief','default','SliderStep',[0.01,0.1],'String','10','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Numero de iteraciones','Callback','')
handles.Respuesta=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[1],'Max',[1],'Min',[0],'Position',[0.3,0.1004367,0.4046875,0.1965066],'Relief','default','SliderStep',[0.01,0.1],'String','Respuesta','Style','listbox','Value',[1],'VerticalAlignment','middle','Visible','on','Tag','Respuesta','Callback','')
handles.Calcula=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.4078125,0.3537118,0.184375,0.0645852],'Relief','default','SliderStep',[0.01,0.1],'String','Calcula','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','Calcula','Callback','Calcula_callback(handles)')


f.visible = "on";

////////////////////////////////////////////////////
// ErrorRelativo
//
// Calcula el error relativo entre 2 número
//
// Parámetros:
//   dN1    El número el cual se va a dividir para sacar la relación
//   dN2    El número con el cual se va a comparar
// Retorno:
//   dError El error relativo como porcentaje entre los 2 números
////////////////////////////////////////////////////
function [dError] = ErrorRelativo(dN1, dN2)
  dError = abs(dN1 - dN2) / dN1 * 100
endfunction

////////////////////////////////////////////////////
// Biseccion
//
// Aproxima la raíz de la función a partir del método de bisección
//
// Parámetros:
//   dXl    El límite inferior
//   dXu    El límite superior
//   dErr   El error en valor porcentual mínimo
//   iIts   La cantidad de iteraciones máximas
////////////////////////////////////////////////////
function [dXr] = Biseccion(dXl, dXu, dErr, iIts)
  dCurrErr = dErr + 1
  iCurrIt = 1
  dXr = (dXl + dXu) / 2
  dPrevXr = dXr
  while F(dXr) <> 0 & iCurrIt < iIts & dCurrErr > dErr
    dPrevXr = dXr
    if F(dXl) < 0 then
      if F(dXr) < 0 then
        dXl = dXr
      else
        dXu = dXr
      end
    else
      if F(dXr) > 0 then
        dXl = dXr
      else
        dXu = dXr
      end
    end
    dXr = (dXl + dXu) / 2
    iCurrIt = iCurrIt + 1
    dCurrErr = ErrorRelativo(dXr, dPrevXr)
  end
endfunction

//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////

function Calcula_callback(handles)
  dXl = strtod(handles.Limite_Inferior.String)
  dXu = strtod(handles.Limite_Superior.String)
  dErr = strtod(handles.Error_Minimo.String)
  iIts = strtod(handles.Numero_de_iteraciones.String)
  sFuncion = handles.Input_Funcion.String
  if sFuncion == "" then
    sFuncion = "x"
  end
  deff('[dY] = F(x)', 'dY = ' + sFuncion)
  handles.Respuesta.String = (string) (Biseccion(dXl, dXu, dErr, iIts))
endfunction
